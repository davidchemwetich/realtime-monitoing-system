services:
    laravel.test:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            - '8080:8080' # For Reverb Broadcast
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - prometheus
            - grafana

    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail

    prometheus:
        image: 'prom/prometheus:latest'
        ports:
            - '9090:9090'
        volumes:
            - './docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
            - './docker/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro'
            - 'sail-prometheus:/prometheus'
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'
        networks:
            - sail
        restart: unless-stopped

    grafana:
        image: 'grafana/grafana:latest'
        ports:
            - '3000:3000'
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin123
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_SECURITY_ALLOW_EMBEDDING=true
            - GF_AUTH_ANONYMOUS_ENABLED=false
            - GF_ALERTING_ENABLED=true
            - GF_UNIFIED_ALERTING_ENABLED=true
            - GF_ALERTING_EXECUTE_ALERTS=true
            - GF_FEATURE_TOGGLES_ENABLE=ngalert
        volumes:
            - 'sail-grafana:/var/lib/grafana'
            - './docker/grafana/provisioning:/etc/grafana/provisioning'
        networks:
            - sail
        depends_on:
            - prometheus
        restart: unless-stopped

networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-prometheus:
        driver: local
    sail-grafana:
        driver: local
